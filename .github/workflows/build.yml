name: build

on:
  schedule:
    - cron: "0 12 * * *"
  push:
    paths-ignore:
      - "*.md"
      - "*.txt"
      - "*.png"
  pull_request:

env:
  IMAGE_NAME: steled/sftp
  DEBIAN_VERSION: bookworm-slim
  ALPINE_VERSION: "3.20.3"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # for proper signature verification
          submodules: true # for shunit2

#      - name: Run ShellCheck
#        uses: ludeeus/action-shellcheck@master
#        with:
#          ignore: tests/shunit2

      - name: Build debian image
        run: |
          docker build . \
            --pull=true \
            --file=Dockerfile \
            --tag="${{ env.IMAGE_NAME }}:debian-${{ env.DEBIAN_VERSION }}"

      - name: Test debian image
        run: tests/run ${{ env.IMAGE_NAME }}:debian-${{ env.DEBIAN_VERSION }}

      - name: Build alpine image
        run: |
          docker build . \
            --pull=true \
            --file=Dockerfile-alpine \
            --tag="${{ env.IMAGE_NAME }}:alpine-${{ env.ALPINE_VERSION }}"

      - name: Test alpine image
        run: tests/run ${{ env.IMAGE_NAME }}:alpine-${{ env.ALPINE_VERSION }}

#      - name: Verify signature
#        if: github.ref == 'refs/heads/master'
#        uses: atmoz/git-verify-ref@master
#        with:
#          import-github-users: atmoz  

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Build and push - debian
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile
#          push: true
#            
#
#      - name: Build and push - alpine
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile-alpine
#          push: true

#      - name: Push images to Docker Hub registry
#        if: github.ref == 'refs/heads/master'
#        run: |
#          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login \
#            -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

#          docker push $IMAGE_NAME # no tags specified to include all tags
#          docker logout

#      - name: Push images to GitHub registry
#        if: github.ref == 'refs/heads/master'
#        run: |
#          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com \
#            -u ${{ github.actor }} --password-stdin

#          TAG_DEBIAN=docker.pkg.github.com/$GITHUB_REPOSITORY/debian
#          TAG_ALPINE=docker.pkg.github.com/$GITHUB_REPOSITORY/alpine
#          docker tag $IMAGE_NAME:debian $TAG_DEBIAN
#          docker tag $IMAGE_NAME:alpine $TAG_ALPINE
#          docker push $TAG_DEBIAN
#          docker push $TAG_ALPINE
#          docker logout docker.pkg.github.com

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and publish debian arm64 images
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
            steled/sftp:debian-${{ env.DEBIAN_VERSION }}

      - name: Build and publish alpine arm64 images
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile-alpine
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
             steled/sftp:alpine-${{ env.ALPINE_VERSION }}